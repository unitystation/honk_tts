name: build executable
on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:
    pull_request:

jobs:
    build:
        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ windows-latest ]

        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Set up Python
                uses: actions/setup-python@v5
                with:
                    python-version: 3.11.0

            -   name: Cache Poetry dependencies
                uses: actions/cache@v4
                with:
                    path: |
                        ~/.cache/pypoetry  # Caches Poetry's global environment
                        ~/.cache/pip        # Caches pip's package downloads
                    key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-poetry-

            -   name: Setup poetry
                run: |
                    python -m pip install --upgrade pip
                    pip install poetry
                    poetry config virtualenvs.create false

            -   name: Install dependencies
                run: |
                    poetry install

            -   name: Compile with Nuitka
                uses: Nuitka/Nuitka-Action@main
                with:
                    nuitka-version: main
                    script-name: main.py
                    onefile: 'true'
                    


            -   name: Upload Artifacts
                uses: actions/upload-artifact@v4
                with:
                    name: nuitka build for ${{ runner.os }}
                    path: |
                        build/*.exe
                        build/*.bin
                        build/*.app/**/*
                    include-hidden-files: true
